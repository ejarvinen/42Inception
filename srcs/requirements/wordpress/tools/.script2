#!/bin/bash
set -eu
cd /var/www/html

# config php-fpm on the first run
if [ ! -e /etc/.firstrun ]; then
	sed -i 's/listen = 127.0.0.1:9000/listen = 9000/g' /etc/php82/php-fpm.d/www.conf
	touch /etc/.firstrun
fi

# download and config wordpress when the volume is mounted for the first time
if [ ! -e .firstmount ]; then
	# wait for mariadb to be ready
	echo "Waiting for MariaDB to be ready..."
	until mariadb-admin ping --protocol=tcp --host=mariadb -u "$MYSQL_USER" --password="$MYSQL_PASSWORD" --wait > /dev/null 2>&1; do
		echo "MariaDB is unavaiable - sleeping"
		sleep 5
	done
	echo "MariaDB is ready!"

	# check if wordpress is already installed
	if [ ! -f wp-config.php ]; then
		echo "Installing Wordpress..."

		# download and config wordpress
		if ! wp core download --allow-root; then
			echo "Failed to download WordPress. Exiting."
			exit 1
		fi
		wp config create --allow-root \
			--dbhost=mariadb \
			--dbuser="$MYSQL_USER" \
			--dbpass="$MYSQL_PASSWORD" \
			--dbname="$MYSQL_DATABASE"
		wp config set WP_CACHE true --raw
		wp config set FS_METHOD direct
		wp core install --allow-root \
			--skip-email \
			--url="$DOMAIN_NAME" \
			--title="$WORDPRESS_TITLE" \
			--admin_user="$WORDPRESS_ADMIN_USER" \
			--admin_password="$WORDPRESS_ADMIN_PASSWORD" \
			--admin_email="$WORDPRESS_ADMIN_EMAIL"

		# create a regular user if it doesn't already exist
		if ! wp user get "$WORDPRESS_USER" --allow-root > /dev/null 2>&1; then
			wp user create "$WORDPRESS_USER" "$WORDPRESS_EMAIL" --role=author --user_pass="$WORDPRESS_PASSWORD" --allow-root
		fi
	else
		echo "WordPress is already installed."
	fi
	chmod o+w -R /var/www/html/wp-content
	touch .firstmount
fi

# start php-fpm
echo "Starting PHP-FPM..."
exec /usr/sbin/php-fpm82 -F
